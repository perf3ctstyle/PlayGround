---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: nginx
  template:
    metadata:
      labels:
        k8s-app: nginx
    spec:
      serviceAccountName: vault-init-agent
      automountServiceAccountToken: false
      volumes:
        - name: vault-token
          projected:
            sources:
            - serviceAccountToken:
                path: vault-token
                expirationSeconds: 7200
        - name: secrets-template
          configMap:
            name: secrets-template
        - name: vault-agent-config
          configMap:
            name: vault-agent-config
        - name: rendered-secrets
          emptyDir:
            medium: "Memory"
      initContainers:
        - name: vault-init-agent
          image: vault:1.9.3
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 101
            runAsNonRoot: true
            capabilities:
              add:
                - IPC_LOCK
          args:
            - "agent"
            - "-config=/etc/vault/config/vault-agent-init.hcl"
          env:
            - name: SKIP_SETCAP
              value: 'true'
          volumeMounts:
            - mountPath: /etc/vault/config
              name: vault-agent-config
            - mountPath: /etc/vault/config/template
              name: secrets-template
            - mountPath: /etc/vault/config/token
              name: vault-token
            - mountPath: /tmp
              name: rendered-secrets
      containers:
        - name: nginx
          image: nginx:1.21.6-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
              name: http
          resources:
            limits:
              cpu: "0.2"
              memory: "400Mi"
            requests:
              cpu: "0.1"
              memory: "200Mi"
          volumeMounts:
            - mountPath: /tmp
              name: rendered-secrets
